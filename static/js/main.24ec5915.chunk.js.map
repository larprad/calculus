{"version":3,"sources":["Component/Header/index.js","Component/Number/index.js","Config/index.js","Utils/index.js","Component/Operand/index.js","Component/Result/index.js","Component/Control/index.js","Component/Loader/index.js","Component/Main/index.js","Component/Info/index.js","Component/Settings/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Number","number","status","difficultyOptions","key","text","value","icon","operandOptions","timerConfig","getRandomNumberBetween","minVal","maxVal","Math","floor","random","Operand","operand","iconName","find","x","Icon","size","name","Result","results","submitResult","handleSubmit","e","preventDefault","console","log","target","onSubmit","map","onClick","Control","stop","start","Button","labelPosition","color","fluid","Loader","timer","style","right","init","backgroundColor","Main","timerMax","operation","numberArray","Info","content","Settings","difficulty","setOperation","setDifficulty","streakCount","useState","isOpen","setIsOpen","Dropdown","selection","options","onChange","disabled","label","App","setNumberArray","setResults","setStreakCount","setTimer","setStatus","useEffect","intervalId","setInterval","clearInterval","resetNumbers","minMaxArray","difficultyNumber","getMinMaxFromDifficulty","numberOne","numberTwo","generateResults","resultArray","numberOfSolutions","variation","shuffle","array","sort","i","randomInt","push","getAnswersFromCalculus","res","success","trueResult","parseInt","checkResult","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24ec5915.chunk.js","sourcesContent":["// styles\r\nimport './header.css';\r\n\r\nconst Header = () => (\r\n  <h1 className=\"header-title\">Calculus.</h1>\r\n);\r\n\r\nexport default Header;","// styles\r\nimport './number.css';\r\n\r\nconst Number = ({number, status}) => {\r\n  return (\r\n    <div className=\"number\">\r\n      <h1>{status ? number : \"?\"}</h1>\r\n    </div>\r\n  )\r\n} ;\r\n\r\nexport default Number;","const difficultyOptions = [\r\n  {\r\n    key: 'easy',\r\n    text: 'easy',\r\n    value: 1,\r\n    icon: 'paw',\r\n  },\r\n  {\r\n    key: 'normal',\r\n    text: 'normal',\r\n    value: 2,\r\n    icon: 'hand peace',\r\n  },\r\n  {\r\n    key: 'hard',\r\n    text: 'hard',\r\n    value: 3,\r\n    icon: 'thumbs up'\r\n  },\r\n  {\r\n    key: 'robot',\r\n    text: 'robot',\r\n    value: 4,\r\n    icon: 'android',\r\n  },\r\n];\r\n\r\nconst operandOptions = [\r\n  {\r\n    key: 'addition',\r\n    text: 'addition',\r\n    value: 1,\r\n    icon: 'add',\r\n  },\r\n  {\r\n    key: 'subtraction',\r\n    text: 'subtraction',\r\n    value: 2,\r\n    icon: 'minus',\r\n  },\r\n  {\r\n    key: 'multiplication',\r\n    text: 'multiplication',\r\n    value: 3,\r\n    icon: 'close',\r\n  },\r\n  // {\r\n  //   key: 'division',\r\n  //   text: 'division',\r\n  //   value: 4,\r\n  //   icon: 'exclamation',\r\n  // },\r\n];\r\n\r\nconst timerConfig = {\r\n  maxValue : 5,\r\n};\r\n\r\nconst getMinMaxFromDifficulty = (difficultyNumber) => {\r\n  switch (difficultyNumber) {\r\n    case 1 : return [1, 5];\r\n    case 2 : return [1, 9];\r\n    case 3 : return [4, 19];\r\n    case 4 : return [11, 99];\r\n    default: return [1,9];\r\n  }\r\n}\r\n\r\nexport {operandOptions, difficultyOptions, getMinMaxFromDifficulty, timerConfig};","// config\r\nimport {operandOptions, difficultyOptions} from '../Config';\r\n\r\nexport const getIconFromOperandValue = (value) => {\r\n  return operandOptions.find(x => x.value === value).icon;\r\n};\r\n\r\nexport const getRandomNumberBetween = (minVal, maxVal) => {\r\n  return minVal + Math.floor(Math.random()*(maxVal - minVal + 1));\r\n};\r\n\r\nexport const checkIfNumber = (number) => {\r\n  return !isNaN(number);\r\n};\r\n\r\nexport const getAnswersFromCalculus = (numberArray, operand, numberOfSolutions = 3, variation = 3) => {\r\n  function shuffle(array) {\r\n    array.sort(() => Math.random() - 0.5);\r\n  }\r\n  const resultArray = [];\r\n  switch(operand) {\r\n    case 1 :\r\n      for(let i = 1; i < numberOfSolutions; i++) {\r\n        const randomInt = Math.floor(Math.random()*variation*2) - variation;\r\n        resultArray.push(numberArray[0] + numberArray[1] + randomInt);\r\n      }; \r\n      resultArray.push(numberArray[0] + numberArray[1]);\r\n      break;\r\n    case 2 :\r\n      for(let i = 1; i < numberOfSolutions; i++) {\r\n        const randomInt = Math.floor(Math.random()*variation*2) - variation;\r\n        resultArray.push(numberArray[0] - numberArray[1] + randomInt);\r\n      }; \r\n      resultArray.push(numberArray[0] - numberArray[1]);\r\n      break;\r\n    case 3 : \r\n      for(let i = 1; i < numberOfSolutions; i++) {\r\n        const randomInt = Math.floor(Math.random()*variation);\r\n        resultArray.push(numberArray[0] * (numberArray[1] + randomInt));\r\n      };\r\n      resultArray.push(numberArray[0] * numberArray[1]);\r\n      break;\r\n    default: return [1,2,3];\r\n  };\r\n  shuffle(resultArray); \r\n  console.log(resultArray)\r\n  return resultArray;\r\n};\r\n\r\nexport const getDifficultyStringFromNumber = (number) => {\r\n  return difficultyOptions.find(x => x.value === number).text; \r\n}\r\n","// componants\r\nimport {Icon} from 'semantic-ui-react';\r\n\r\n// utils\r\nimport {getIconFromOperandValue} from '../../Utils'\r\n\r\n// styles\r\nimport './operand.css'\r\n\r\nconst Operand = ({operand}) => {\r\n  const iconName = getIconFromOperandValue(operand);\r\n\r\n  return (\r\n    <div className=\"operand\">\r\n      <Icon size={\"large\"} name={iconName}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Operand;\r\n","import './result.css';\r\n\r\nconst Result = ({results, status, submitResult}) => {\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('submit', e.target.value);\r\n    submitResult(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"result\" onSubmit={handleSubmit}>\r\n      {results && status\r\n        ? results.map(x => <button key={Math.random()} value={x} onClick={handleSubmit} className='result-button active'>{x}</button>)\r\n        : <h3>Push Start to begin!</h3>\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Result;\r\n","// components\r\nimport {Button, Icon} from 'semantic-ui-react';\r\n\r\n// styles\r\nimport './control.css';\r\n\r\nconst Control = ({stop, status, start }) => {\r\n  return (\r\n    <div className=\"control\">\r\n      {\r\n        !status \r\n        ? <Button onClick={start} icon labelPosition='left' color='green' size='huge' fluid>\r\n            <Icon name='play'/>\r\n            Start\r\n          </Button>\r\n        : <Button onClick={stop} icon labelPosition='left' color='red' size='huge' fluid>\r\n            <Icon name='stop'/>\r\n            Stop\r\n          </Button>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Control;","// styles\r\nimport './loader.css';\r\n\r\nconst Loader = ({timer, init}) => {\r\n  const rightPosVal = (100 / init) * timer + '%';\r\n  const style = {\r\n    right: rightPosVal,\r\n    backgroundColor: !timer ? 'red' : 'var(--second-color)', \r\n  }\r\n  \r\n  return (\r\n    <div className=\"loader\" style={style}>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","// componants\r\nimport Number from '../Number';\r\nimport Operand from '../Operand';\r\nimport Result from '../Result';\r\nimport Control from '../Control';\r\nimport Loader from '../Loader';\r\n\r\n// styles\r\nimport './main.css';\r\n\r\nconst Main = ({timerMax, operation, results, timer, submitResult, numberArray, status, start, stop}) => {\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"main-operation\">\r\n        <Loader timer={timer} init={timerMax}/>\r\n        <Number number={numberArray[0]} status={status}/>\r\n        <Operand operand={operation}/>\r\n        <Number number={numberArray[1]} status={status}/>\r\n      </div>\r\n      <Result results={results} status={status} submitResult={submitResult}/>\r\n      <Control start={start} stop={stop} status={status}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Main;\r\n","// composants\r\nimport {Icon} from 'semantic-ui-react';\r\n\r\n// styles\r\nimport './info.css';\r\n\r\n\r\nconst Info = ({icon, content}) => {\r\n  return (\r\n    <div className=\"info\">\r\n      <div className=\"info-icon\">\r\n        <Icon size=\"large\" name={icon} color={\"violet\"}/>\r\n      </div> \r\n      <h2>{content}</h2>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Info;","// libs\r\nimport {useState} from 'react';\r\n\r\n// composants\r\nimport {Icon, Dropdown} from 'semantic-ui-react';\r\nimport Info from '../Info';\r\n\r\n// utils\r\nimport {getDifficultyStringFromNumber} from '../../Utils/index';\r\n\r\n// styles\r\nimport './settings.css';\r\n\r\nconst Settings = ({\r\n  operandOptions,\r\n  difficultyOptions,\r\n  operation,\r\n  difficulty,\r\n  setOperation,\r\n  setDifficulty,\r\n  status,\r\n  streakCount,\r\n  timer\r\n}) => {\r\n  const [isOpen, setIsOpen ] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    if(!status) setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOperandChange = (e, {value}) => {\r\n    setOperation(value);\r\n  };\r\n  const handleDifficultyChange = (e, {value}) => {\r\n    setDifficulty(value);\r\n  };\r\n\r\n  return (\r\n    <div className={isOpen ? \"settings open\" : \"settings\"}>\r\n      <div className=\"settings-main\">\r\n        <div className=\"settings-main-container\">\r\n          <h1 className=\"settings-main-title\">Settings</h1>\r\n          <Dropdown\r\n            selection\r\n            className=\"settings-main-dropdown\"\r\n            options={operandOptions}\r\n            value={operation}\r\n            onChange={handleOperandChange}\r\n            disabled={status}\r\n            fluid\r\n          />\r\n          <Dropdown\r\n            className=\"settings-main-dropdown\"\r\n            label=\"Difficulty\"\r\n            selection\r\n            options={difficultyOptions}\r\n            value={difficulty}\r\n            onChange={handleDifficultyChange}\r\n            disabled={status}\r\n            fluid\r\n          />\r\n        </div>\r\n        <div className=\"settings-main-container\">\r\n          <h1 className=\"settings-main-title\">Best Streaks</h1>\r\n        </div>\r\n      </div>\r\n    <div className={ status ? \"settings-control hide\" : \"settings-control\" } onClick={handleOpen}>\r\n      <Icon name={isOpen ? \"arrow alternate circle left\" : \"arrow alternate circle right\"} size=\"big\" color=\"olive\"/>\r\n    </div>\r\n    <div className=\"settings-info\">\r\n      <Info icon={\"chart line\"} content={getDifficultyStringFromNumber(difficulty)}/>\r\n      <Info icon={\"gem\"} content={streakCount}/>\r\n      <Info icon={\"wait\"} content={timer}/>\r\n    </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Settings;","// libs\r\nimport {useState, useEffect} from 'react';\r\n\r\n// components\r\nimport Header from './Component/Header';\r\nimport Main from './Component/Main';\r\nimport Settings from './Component/Settings';\r\n\r\n// config\r\nimport {\r\n  operandOptions, \r\n  difficultyOptions,\r\n  getMinMaxFromDifficulty,\r\n  timerConfig,\r\n} from './Config';\r\n\r\n// styles\r\nimport './App.css';\r\nimport { \r\n  getRandomNumberBetween,\r\n  getAnswersFromCalculus,\r\n} from './Utils';\r\n\r\nfunction App() {\r\n  // global state\r\n  const [operation, setOperation] = useState(1);\r\n  const [numberArray, setNumberArray] = useState([0,0])\r\n  const [difficulty, setDifficulty] = useState(2);\r\n  const [results, setResults] = useState([]);\r\n  const [streakCount, setStreakCount] = useState(0);\r\n  const [timer, setTimer] = useState(timerConfig.maxValue);\r\n  const [status, setStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!timer || !status) return;\r\n    const intervalId = setInterval(() => {\r\n      setTimer(Math.floor((timer - 0.1)*10)/10);\r\n    }, 100);\r\n    return () => clearInterval(intervalId);\r\n  }, [timer, status]);\r\n\r\n  useEffect(() => {if(timer === 0) {\r\n    setStreakCount(0)} \r\n  }, [timer])\r\n\r\n  // functions\r\n  const resetNumbers = () => {\r\n    const minMaxArray = getMinMaxFromDifficulty(difficulty);\r\n    const numberOne = getRandomNumberBetween(minMaxArray[0],minMaxArray[1]);\r\n    const numberTwo = getRandomNumberBetween(minMaxArray[0],minMaxArray[1]);\r\n    setNumberArray([numberOne, numberTwo]);\r\n    setTimer(5);\r\n    generateResults([numberOne, numberTwo]);\r\n  }\r\n\r\n  const checkResult = (res) => {\r\n    let trueResult;\r\n    switch(operation) {\r\n      case 1 : trueResult = numberArray[0] + numberArray[1]; break\r\n      case 2 : trueResult = numberArray[0] - numberArray[1]; break\r\n      case 3 : trueResult = numberArray[0] * numberArray[1]; break\r\n      default: return '?'\r\n    };\r\n    if(trueResult === parseInt(res, 10)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const submitResult = (res) => {\r\n    const success = checkResult(res);\r\n    console.log('submit res', success)\r\n    if(success) {\r\n      resetNumbers();\r\n      setStreakCount(streakCount + 1);\r\n    } else {\r\n      setStreakCount(0);\r\n    }\r\n  }\r\n\r\n  const generateResults = (numberArray) => {\r\n    const resultArray = getAnswersFromCalculus(numberArray, operation);\r\n    setResults(resultArray);\r\n  }\r\n\r\n  //handling game\r\n  const start = () => {\r\n    resetNumbers();\r\n    setStatus(true);\r\n  };\r\n\r\n  const stop = () => {\r\n    resetNumbers();\r\n    setStatus(false);\r\n    setStreakCount(0);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Settings \r\n        operation={operation}\r\n        setOperation={setOperation}\r\n        difficulty={difficulty}\r\n        setDifficulty={setDifficulty} \r\n        operandOptions={operandOptions}\r\n        difficultyOptions={difficultyOptions}\r\n        status={status}\r\n        streakCount={streakCount}\r\n        timer={timer}\r\n      />\r\n      <Main \r\n        operation={operation}\r\n        results={results}\r\n        numberArray={numberArray}\r\n        submitResult={submitResult}\r\n        status={status}\r\n        start={start}\r\n        stop={stop}\r\n        timer={timer}\r\n        timerMax = {timerConfig.maxValue}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}