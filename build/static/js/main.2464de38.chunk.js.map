{"version":3,"sources":["Component/Header/index.js","Component/Toolbar/index.js","Config/index.js","Utils/index.js","Component/Calcul/index.js","Component/Info/index.js","Component/Control/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Toolbar","operandOptions","difficultyOptions","operation","difficulty","setOperation","setDifficulty","status","Dropdown","selection","options","value","onChange","e","disabled","label","key","text","icon","getRandomNumberBetween","minVal","maxVal","Math","floor","random","Calcul","setResult","result","numberArray","submitResult","iconName","find","x","Icon","size","name","color","onSubmit","preventDefault","console","log","target","Info","number","title","Control","stop","start","timer","streakCount","Button","onClick","labelPosition","App","useState","setNumberArray","setStreakCount","setTimer","setStatus","useEffect","intervalId","setInterval","clearInterval","resetNumbers","minMaxArray","difficultyNumber","getMinMaxFromDifficulty","numberOne","numberTwo","trueResult","parseInt","checkResult","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2464de38.chunk.js","sourcesContent":["// styles\r\nimport './header.css';\r\n\r\nconst Header = () => (\r\n  <h1 className=\"header-title\">Calculus</h1>\r\n);\r\n\r\nexport default Header;","// components\r\nimport { Dropdown } from 'semantic-ui-react';\r\n\r\n// styles\r\nimport './toolbar.css';\r\n\r\nconst Toolbar = ({\r\n  operandOptions,\r\n  difficultyOptions,\r\n  operation,\r\n  difficulty,\r\n  setOperation,\r\n  setDifficulty,\r\n  status,\r\n}) => {\r\n  const handleOperandChange = (e, {value}) => {\r\n    setOperation(value);\r\n  };\r\n  const handleDifficultyChange = (e, {value}) => {\r\n    setDifficulty(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <div className=\"toolbar-container\">\r\n        <div className=\"toolbar-info\">\r\n          <h3 className=\"toolbar-label\">Operation</h3>\r\n          <Dropdown\r\n          selection\r\n          options={operandOptions}\r\n          value={operation}\r\n          onChange={handleOperandChange}\r\n          disabled={status}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3 className=\"toolbar-label\">Difficulty</h3>\r\n          <Dropdown\r\n          label=\"Difficulty\"\r\n          selection\r\n          options={difficultyOptions}\r\n          value={difficulty}\r\n          onChange={handleDifficultyChange}\r\n          disabled={status}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Toolbar; ","const difficultyOptions = [\r\n  {\r\n    key: 'easy',\r\n    text: 'easy',\r\n    value: 1,\r\n    icon: 'paw',\r\n  },\r\n  {\r\n    key: 'normal',\r\n    text: 'normal',\r\n    value: 2,\r\n    icon: 'hand peace',\r\n  },\r\n  {\r\n    key: 'hard',\r\n    text: 'hard',\r\n    value: 3,\r\n    icon: 'thumbs up'\r\n  },\r\n  {\r\n    key: 'robot',\r\n    text: 'robot',\r\n    value: 4,\r\n    icon: 'android',\r\n  },\r\n];\r\n\r\nconst operandOptions = [\r\n  {\r\n    key: 'addition',\r\n    text: 'addition',\r\n    value: 1,\r\n    icon: 'add',\r\n  },\r\n  {\r\n    key: 'subtraction',\r\n    text: 'subtraction',\r\n    value: 2,\r\n    icon: 'minus',\r\n  },\r\n  {\r\n    key: 'multiplication',\r\n    text: 'multiplication',\r\n    value: 3,\r\n    icon: 'close',\r\n  },\r\n  {\r\n    key: 'division',\r\n    text: 'division',\r\n    value: 4,\r\n    icon: 'exclamation',\r\n  },\r\n];\r\n\r\nconst getMinMaxFromDifficulty = (difficultyNumber) => {\r\n  switch (difficultyNumber) {\r\n    case 1 : return [1, 5];\r\n    case 2 : return [1, 9];\r\n    case 3 : return [4, 19];\r\n    case 4 : return [11, 99];\r\n    default: return [1,9];\r\n  }\r\n}\r\n\r\nexport {operandOptions, difficultyOptions, getMinMaxFromDifficulty};","// config\r\nimport {operandOptions} from '../Config';\r\n\r\nexport const getIconFromOperandValue = (value) => {\r\n  return operandOptions.find(x => x.value === value).icon;\r\n};\r\n\r\nexport const getRandomNumberBetween = (minVal, maxVal) => {\r\n  return minVal + Math.floor(Math.random()*(maxVal - minVal + 1));\r\n};\r\n\r\nexport const checkIfNumber = (number) => {\r\n  return !isNaN(number);\r\n}\r\n","// components\r\nimport {Icon} from \"semantic-ui-react\"\r\n\r\n// utils\r\nimport {getIconFromOperandValue} from '../../Utils';\r\n\r\n// styles\r\nimport \"./calcul.css\"\r\n\r\nconst Calcul = ({operation, setResult, result, numberArray, submitResult, status}) => {\r\n  const iconName = getIconFromOperandValue(operation);\r\n  const handleResultChange = (e) => {\r\n    setResult(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('submit');\r\n    submitResult();\r\n  }\r\n  return (\r\n    <div className=\"calcul\">\r\n      <div className=\"calcul-number\">\r\n        <h2>\r\n          {status ? numberArray[0] : 'X'}\r\n        </h2>\r\n      </div>\r\n      <Icon size=\"huge\" name={iconName} color='violet'/>\r\n      <div className=\"calcul-number\">\r\n        <h2>\r\n          {status ? numberArray[1] : 'X'}\r\n        </h2>\r\n      </div>\r\n      <Icon size=\"huge\" name='arrow alternate circle right outline' color='violet' />\r\n      <form onSubmit={handleSubmit}>\r\n        <input className=\"calcul-number result\" value={result} onChange={handleResultChange} disabled={!status}></input>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Calcul;\r\n","// styles\r\nimport './info.css';\r\n\r\n\r\nconst Info = ({number, title}) => {\r\n  return (\r\n    <div className=\"info\">\r\n      <h3>{title}</h3>\r\n      <h2>{number}</h2>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Info;","// components\r\nimport {Button, Icon} from 'semantic-ui-react';\r\nimport Info from '../Info';\r\n\r\n// styles\r\nimport './control.css';\r\n\r\nconst Control = ({stop, status, start, timer, streakCount}) => {\r\n  return (\r\n    <div className=\"control\">\r\n      <div className=\"control-container\"> \r\n        <div className=\"info-container\">\r\n          \r\n          {\r\n            !status \r\n            ? <Button onClick={start} icon labelPosition='left' color='green' size='huge'>\r\n                <Icon name='play'/>\r\n                Start\r\n              </Button>\r\n            : <Button onClick={stop} icon labelPosition='left' color='red' size='huge'>\r\n                <Icon name='stop'/>\r\n                Stop\r\n              </Button>\r\n          }\r\n        </div>\r\n        <div className=\"info-container\">\r\n          <Info title={'Streak'} number={streakCount}/>\r\n          <Info title={'Timer'} number={timer}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Control;","// libs\nimport {useState, useEffect} from 'react';\n\n// components\nimport Header from './Component/Header';\nimport Toolbar from './Component/Toolbar';\nimport Calcul from './Component/Calcul';\nimport Control from './Component/Control';\n\n// config\nimport {operandOptions, difficultyOptions, getMinMaxFromDifficulty} from './Config';\n\n// styles\nimport './App.css';\nimport { getRandomNumberBetween } from './Utils';\n\nfunction App() {\n  // global state\n  const [operation, setOperation] = useState(1);\n  const [numberArray, setNumberArray] = useState([0,0])\n  const [difficulty, setDifficulty] = useState(2);\n  const [result, setResult] = useState('');\n  const [streakCount, setStreakCount] = useState(0);\n  const [timer, setTimer] = useState(10);\n  const [status, setStatus] = useState(false);\n\n  useEffect(() => {\n    if (!timer || !status) return;\n    const intervalId = setInterval(() => {\n      setTimer(timer - 1);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [timer, status]);\n\n  useEffect(() => {if(timer === 0) setStreakCount(0) }, [timer])\n\n  // functions\n  const resetNumbers = () => {\n    const minMaxArray = getMinMaxFromDifficulty(difficulty);\n    const numberOne = getRandomNumberBetween(minMaxArray[0],minMaxArray[1]);\n    const numberTwo = getRandomNumberBetween(minMaxArray[0],minMaxArray[1]);\n    setNumberArray([numberOne, numberTwo]);\n    setTimer(10);\n    setResult('');\n  }\n\n  const stop = () => {\n    resetNumbers();\n    setStatus(false);\n    setStreakCount(0);\n  }\n\n  const checkResult = () => {\n    let trueResult;\n    switch(operation) {\n      case 1 : trueResult = numberArray[0] + numberArray[1]; break\n      case 2 : trueResult = numberArray[0] - numberArray[1]; break\n      case 3 : trueResult = numberArray[0] * numberArray[1]; break\n      case 4 : trueResult = numberArray[0] / numberArray[1]; break\n      default: return '?'\n    };\n    if(trueResult === parseInt(result, 10)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const submitResult = () => {\n    const success = checkResult();\n    if(success) {\n      resetNumbers();\n      setStreakCount(streakCount + 1);\n    } else {\n      setStreakCount(0);\n    }\n  }\n\n  const start = () => {\n    resetNumbers();\n    setStatus(true);\n  };\n\n  // jsx\n  return (\n    <div className=\"App\">\n      <Header />\n      <Toolbar \n        operation={operation}\n        setOperation={setOperation}\n        difficulty={difficulty}\n        setDifficulty={setDifficulty} \n        operandOptions={operandOptions}\n        difficultyOptions={difficultyOptions}\n        status={status}\n      />\n      <Calcul\n        operation={operation}\n        result={result}\n        setResult={setResult}\n        numberArray={numberArray}\n        submitResult={submitResult}\n        status={status}\n      />\n      <Control\n        streakCount={streakCount}\n        timer={timer}\n        start={start}\n        status={status}\n        stop={stop}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}